% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardize_parameters.R
\name{standardize_parameters}
\alias{standardize_parameters}
\title{Get Standardized Model Parameters}
\usage{
standardize_parameters(model, method = "refit", ...)
}
\arguments{
\item{model}{A statistical model.}

\item{method}{The method used for standardizing the parameters. Can be "refit" (default).}

\item{...}{Arguments passed to or from other methods.}
}
\description{
Compute standardized model parameters (coefs).
}
\details{
Methods:
\itemize{
 \item \strong{refit}: This method is based on a complete model re-fit using the standardized data (based on \code{mean} and \code{sd}). It is the most accurate, especially for parameters related to interactions, but it is also the most computationnaly costly.
 \item \strong{refit_robust}: This method is based on a complete model re-fit using the standardized data (based on \code{median} and \code{mad}). It is the most accurate, especially for parameters related to interactions, but it is also the most computationnaly costly.
 \item \strong{refit_2sd}: This method is based on a complete model re-fit using the standardized data (based on \code{mean} and two times the \code{sd}). It is the most accurate, especially for parameters related to interactions, but it is also the most computationnaly costly.
 \item \strong{full}: Post-hoc standardization of the model parmaters, based on \code{sd} of parameters.
 \item \strong{full_robust}: Post-hoc standardization of the model parmaters, based on \code{mad} of parameters.
}
}
\examples{
data(iris)

model <- lm(Sepal.Length ~ Species * Petal.Width, data = iris)
standardize_parameters(model, method = "refit")
standardize_parameters(model, method = "refit_robust")
standardize_parameters(model, method = "refit_2sd")
standardize_parameters(model, method = "full")
standardize_parameters(model, method = "full_robust")

iris$binary <- ifelse(iris$Sepal.Width > 3, 1, 0)
model <- glm(binary ~ Species * Sepal.Length, data = iris, family = "binomial")
standardize_parameters(model, method = "refit")
standardize_parameters(model, method = "refit_robust")
standardize_parameters(model, method = "full")
standardize_parameters(model, method = "full_robust")

}
