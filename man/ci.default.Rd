% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_ci.R, R/methods_glmmTMB.R
\name{ci.default}
\alias{ci.default}
\alias{ci.glmmTMB}
\title{Confidence Intervals (CI)}
\usage{
\method{ci}{default}(x, ci = 0.95, dof = NULL, method = NULL, robust = FALSE, ...)

\method{ci}{glmmTMB}(
  x,
  ci = 0.95,
  dof = NULL,
  method = "wald",
  robust = FALSE,
  component = "all",
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{A statistical model.}

\item{ci}{Confidence Interval (CI) level. Default to \code{0.95} (\verb{95\%}).}

\item{dof}{Number of degrees of freedom to be used when calculating
confidence intervals. If \code{NULL} (default), the degrees of freedom are
retrieved by calling \code{\link[=degrees_of_freedom]{degrees_of_freedom()}} with
approximation method defined in \code{method}. If not \code{NULL}, use this argument
to override the default degrees of freedom used to compute confidence
intervals.}

\item{method}{Method for computing degrees of freedom for
confidence intervals (CI) and the related p-values. Allowed are following
options (which vary depending on the model class): \code{"residual"},
\code{"normal"}, \code{"likelihood"}, \code{"satterthwaite"}, \code{"kenward"}, \code{"wald"},
\code{"profile"}, \code{"boot"}, \code{"uniroot"}, \code{"ml1"}, \code{"betwithin"}, \code{"hdi"},
\code{"quantile"}, \code{"ci"}, \code{"eti"}, \code{"si"}, \code{"bci"}, or \code{"bcai"}. See section
\emph{Confidence intervals and approximation of degrees of freedom} in
\code{\link[=model_parameters]{model_parameters()}} for further details.}

\item{robust}{Logical, if \code{TRUE}, computes confidence intervals based on
robust standard errors. See \code{\link[=standard_error_robust]{standard_error_robust()}}.}

\item{...}{Arguments passed down to \code{\link[=standard_error_robust]{standard_error_robust()}}
when confidence intervals or p-values based on robust standard errors
should be computed.}

\item{component}{Model component for which parameters should be shown. See
the documentation for your object's class in \code{\link[=model_parameters]{model_parameters()}} for
further details.}

\item{verbose}{Toggle warnings and messages.}
}
\value{
A data frame containing the CI bounds.
}
\description{
Compute confidence intervals (CI) for frequentist models.
}
\note{
\code{ci_robust()} resp. \code{ci(robust = TRUE)} rely on the \pkg{sandwich}
or \pkg{clubSandwich} package (the latter if \code{vcov_estimation = "CR"} for
cluster-robust standard errors) and will thus only work for those models
supported by those packages.
}
\section{Confidence intervals and approximation of degrees of freedom}{

There are different ways of approximating the degrees of freedom depending
on different assumptions about the nature of the model and its sampling
distribution. The \code{ci_method} modulates the method for computing degrees
of freedom (df) that are used to calculate confidence intervals (CI) and the
related p-values. Following options are allowed, depending on the model
class:

\strong{Classic methods:}
\itemize{
\item \code{"residual"}: Applies to \emph{non-Bayesian models}; CI computation based on
\emph{t distribution with residual df}; p-values are \emph{Wald-based p (t-distribution)};
For models with z-statistics,\code{"residual"} will return the same result as
\code{"normal"}.
\item \code{"normal"}: Applies to \emph{non-Bayesian models}; CI computation based on
\emph{normal distribution assumptions}; p-values are \emph{Wald-based p (normal-distribution)}
\item \code{"wald"}: Applies to \emph{non-Bayesian models}; CI computation based on
\emph{t distribution with residual df} for \emph{linear models}, and on
\emph{normal distribution assumptions} for all other models; p-values are
\emph{Wald-based p (t-distribution)} for linear models and
\emph{Wald-based p (normal-distribution)} for all other models. In other word:
for linear models, \code{"wald"} will give the same results as \code{"residual"},
while for all other models, \code{"wald"} is an alias for \code{"normal"}.
}

\strong{Methods for mixed models:}
\itemize{
\item \code{"satterthwaite"}: Applies to \emph{linear mixed models}; CI computation
based on \emph{t distribution with Satterthwaite df}; p-values are
\emph{Wald-based p (t-distribution with Satterthwaite df)}.
\item \code{"kenward"}: Applies to \emph{linear mixed models}; CI computation
based on \emph{t distribution with Kenward-Roger standard errors and df};  p-values
are \emph{Wald-based p (t-distribution with Kenward-Roger standard errors and df)}.
\item \code{"ml1"}: Applies to \emph{linear mixed models}; CI computation
based on \emph{t distribution with m-l-1 approximated df};  p-values are
\emph{Wald-based p (t-distribution with m-l-1 approximated df)}. See
\code{\link[=ci_ml1]{ci_ml1()}}.
\item \code{"betwithin"}: Applies to \emph{(generalized) linear mixed models}; CI
computation based on \emph{t distribution with between-with df};  p-values are
\emph{Wald-based p (t-distribution with between-with df)}. See \code{\link[=ci_betwithin]{ci_betwithin()}}.
}

\strong{Special methods for GLM(M)s:}
\itemize{
\item \code{"boot"}: Applies to \emph{non-Bayesian models} of class \code{merMod};
CI computation based on \emph{parametric bootstrapping}; p-values are
\emph{Wald-based p (normal-distribution)} (note: this might change in a future
update!).
\item \code{"profile"}: Applies to \emph{non-Bayesian models} of class \code{glm}, \code{polr} or
\code{glmmTMB}; CI computation based on \emph{profiling the likelihood curve for a parameter},
using linear interpolation to find where likelihood ratio equals a
critical value; p-values are \emph{Wald-based p (normal-distribution)} (note:
this might change in a future update!).
\item \code{"uniroot"}: Applies to \emph{non-Bayesian models} of class \code{glmmTMB};
CI computation based on \emph{profiling the likelihood curve for a parameter},
using root finding to find where likelihood ratio equals a critical value;
p-values are \emph{Wald-based p (normal-distribution)} (note: this might
change in a future update!).
}

\strong{Methods for bootstrapped or Bayesian models:}
\itemize{
\item \code{"quantile"}: Applies to \emph{all models (including Bayesian model)}, for
non-Bayesian models only if \code{bootstrap=TRUE}; CI computation based on
\emph{equal tailed intervals using the quantiles method}; p-values are based on
the \emph{probability of direction}. See also \code{\link[bayestestR:eti]{bayestestR::eti()}}.
\item \code{"eti"}: Same as \code{"quantile"}.
\item \code{"hdi"}: Applies to \emph{all models (including Bayesian model)}, for
non-Bayesian models only if \code{bootstrap=TRUE}; CI computation based on
\emph{highest density intervals}; p-values are based on the
\emph{probability of direction}. See also \code{\link[bayestestR:hdi]{bayestestR::hdi()}}.
\item \code{"bci"}: Applies to \emph{all models (including Bayesian model)}, for
non-Bayesian models only if \code{bootstrap=TRUE}; CI computation based on
\emph{bias corrected and accelerated intervals}; p-values are based on the
\emph{probability of direction}. See also \code{\link[bayestestR:bci]{bayestestR::bci()}}.
\item \code{"bcai"}: is an alias for \code{"bci"}.
\item \code{"si"}: Applies to \emph{all models (including Bayesian model)}, for
non-Bayesian models only if \code{bootstrap=TRUE}; CI computation based on the
\emph{support interval method}; p-values are based on the
\emph{probability of direction}. See also \code{\link[bayestestR:si]{bayestestR::si()}}.
}

For all iteration-based methods (\code{"hdi"}, \code{"quantile"}, \code{"ci"}, \code{"eti"},
\code{"si"}, \code{"bci"}, or \code{"bcai"}), p-values are based on the probability of
direction (\code{\link[bayestestR:p_direction]{bayestestR::p_direction()}}), which is converted into
p-value using \code{\link[bayestestR:pd_to_p]{bayestestR::pd_to_p()}}.
}

\examples{
\donttest{
library(parameters)
if (require("glmmTMB")) {
  model <- glmmTMB(
    count ~ spp + mined + (1 | site),
    ziformula = ~mined,
    family = poisson(),
    data = Salamanders
  )

  ci(model)
  ci(model, component = "zi")
}
}
}
