% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/n_clusters.R, R/n_clusters_elbow.R
\name{n_clusters}
\alias{n_clusters}
\alias{n_clusters_elbow}
\alias{n_clusters_gap}
\alias{n_clusters_silhouette}
\title{Number of clusters to extract}
\usage{
n_clusters(
  x,
  standardize = TRUE,
  include_factors = FALSE,
  package = c("NbClust", "mclust", "cluster", "M3C"),
  fast = TRUE,
  ...
)

n_clusters_elbow(
  x,
  standardize = TRUE,
  include_factors = FALSE,
  clustering_function = stats::kmeans,
  n_max = 15,
  ...
)

n_clusters_gap(
  x,
  standardize = TRUE,
  include_factors = FALSE,
  clustering_function = stats::kmeans,
  n_max = 15,
  ...
)

n_clusters_silhouette(
  x,
  standardize = TRUE,
  include_factors = FALSE,
  clustering_function = kmeans,
  n_max = 15,
  ...
)
}
\arguments{
\item{x}{A data frame.}

\item{standardize}{Standardize the dataframe before clustering (default).}

\item{include_factors}{Logical, if \code{TRUE}, factors are converted to numerical
values in order to be included in the data for determining the number of
clusters. By default, factors are removed, because most methods that
determine the number of clusters need numeric input only.}

\item{package}{Package from which methods are to be called to determine the
number of clusters. Can be \code{"all"} or a vector containing
\code{"NbClust"}, \code{"mclust"}, \code{"cluster"} and \code{"M3C"}.}

\item{fast}{If \code{FALSE}, will compute 4 more indices (sets \code{index = "allong"} in \code{NbClust}). This has been deactivated by default as it is
computationally heavy.}

\item{...}{Arguments passed to or from other methods.}

\item{clustering_function}{The clustering functions to use. Can be \code{kmeans}, code{cluster::pam}, code{cluster::clara}, code{cluster::fanny}, and more. See \code{fviz_nbclust}.}

\item{n_max}{Maximal number of clusters to test.}
}
\description{
This function runs many existing procedures for determining how many clusters
are present in data. It returns the number of clusters based on the maximum
consensus. In case of ties, it will select the solution with fewer clusters.
}
\note{
There is also a \href{https://easystats.github.io/see/articles/parameters.html}{\code{plot()}-method} implemented in the \href{https://easystats.github.io/see/}{\pkg{see}-package}.
}
\examples{
library(parameters)
\donttest{
if (require("mclust", quietly = TRUE) && require("NbClust", quietly = TRUE) &&
  require("cluster", quietly = TRUE) && require("see")) {
  n <- n_clusters(iris[, 1:4], package = c("NbClust", "mclust", "cluster"))
  n
  as.data.frame(n)
  plot(n)

  # The following runs all the method but it significantly slower
  # n_clusters(iris[, 1:4], standardize = FALSE, package = "all", fast = FALSE)
}
}
# Elbow method --------------------
x <- n_clusters_elbow(iris[1:4])
x
as.data.frame(x)

if (require("see", quietly = TRUE)) {
  plot(x)
}
# Gap method --------------------
x <- n_clusters_gap(iris[1:4])
x
as.data.frame(x)
plot(x)
# Silhouette method --------------------
x <- n_clusters_silhouette(iris[1:4])
x
as.data.frame(x)
plot(x)
}
